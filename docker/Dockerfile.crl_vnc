FROM arclab/vnc:cuda9.0-cudnn7 
WORKDIR /.

# ========== Anaconda ==========
# https://github.com/ContinuumIO/docker-images/blob/master/anaconda/Docker file
RUN apt-get update && apt-get install -y \
  bzip2 \
  ca-certificates \
  curl \
  dpkg \
  git \
  grep \
  wget \
  && rm -rf /var/lib/apt/lists/*

# FOR Mujoco
RUN apt-get update -q \
  && apt-get dist-upgrade -y \
  && DEBIAN_FRONTEND=noninteractive apt-get install -y \
  curl \
  git \
  libgl1-mesa-dev \
  libgl1-mesa-glx \
  libglew-dev \
  libosmesa6-dev \
  software-properties-common \
  net-tools \
  unzip \
  vim \
  virtualenv \
  wget \
  xpra \
  xserver-xorg-dev \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

# gym
RUN apt-get update && apt-get dist-upgrade -y && apt-get install -y \
  ffmpeg \
  libboost-all-dev \
  libjpeg-dev \
  libsdl2-dev \
  patchelf \
  python-pip \
  python-pyglet \
  python-setuptools \
  python3-dev \
  python3-opengl \
  unzip \
  xvfb \
  && rm -rf /var/lib/apt/lists/* 

RUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \
  wget  --no-check-certificate --quiet https://repo.continuum.io/archive/Anaconda3-2018.12-Linux-x86_64.sh && \
  /bin/bash /Anaconda3-2018.12-Linux-x86_64.sh -b -p /opt/conda && \
  rm /Anaconda3-2018.12-Linux-x86_64.sh

RUN TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
    dpkg -i tini.deb && \
    rm tini.deb && \
    apt-get clean

ENV PATH /opt/conda/bin:$PATH
# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

# ========== Special Deps ==========
RUN apt-get update && apt-get -y install \
  make \
  cmake \
  python3-pip

RUN pip3 install awscli
# ALE requires zlib
RUN apt-get -y install zlib1g-dev


RUN pip install imageio tabulate nose
RUN apt-get install -y ack-grep

# usual pip install pygame will fail
RUN pip3 install pygame
RUN pip3 install Pillow

#Mujoco
RUN mkdir /root/.mujoco && \
  cd /root/.mujoco  && \
  wget https://www.roboti.us/download/mjpro150_linux.zip  && \
  unzip mjpro150_linux.zip

RUN touch /root/.mujoco/mjkey.txt

# Set the mujoco path
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/root/.mujoco/mjpro150/bin 

# Need this for opengl to work inside docker
# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES \
  ${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES \
  ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics

RUN apt-get update && apt-get install mesa-utils

ENV LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libGLEW.so:/usr/lib/x86_64-linux-gnu/libGL.so

# necessary for find mujoco installation
ENV HOME /root

CMD mkdir /root/code
ADD environment.yml /root/code/environment.yml
RUN conda env create -f /root/code/environment.yml

ENV PYTHONPATH $PYTHONPATH:/root/rllab
ENV PATH /opt/conda/envs/rllab3/bin:$PATH
RUN echo "source activate rllab3" >> /root/.bashrc
ENV BASH_ENV /root/.bashrc
WORKDIR /root/code

# prevent pip from complaining about available upgrades
RUN ["/bin/bash", "-c", "source activate rllab3 && pip install --upgrade pip"]

#RUN pip install tensorflow==1.12.0
#RUN pip install tensorflow-gpu==1.12.0
RUN pip install pybullet

RUN apt-get install -y python3-tk

RUN pip install --upgrade pip
RUN pip install atari-py==0.1.14 
RUN pip install pandas dill seaborn mpi4py zmq glob2 matplotlib pytz setuptools future tqdm

RUN pip uninstall -y gym
RUN pip install gym psutil

# set timezone
ENV TZ=America/Los_Angeles
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN pip install gtimer
ENV PYTHONPATH $PYTHONPATH:/root/crl_code:/root/jacob_sac:/root/robosuite
CMD ["/bin/bash", "/root/init.sh"]


